{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/jivosdk\/native_usage_basics"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/tutorials\/jivosdk\/native_usage_basics"]}],"sections":[{"kind":"hero","content":[{"inlineContent":[{"type":"text","text":"Some scenarios of how to use SDK"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"How to handle user session"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"How to display SDK","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"How to customize UI elements","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How to handle Push Notifications"}]}]}],"type":"unorderedList"}],"chapter":"Native app","title":"Basic usage"},{"kind":"tasks","tasks":[{"title":"How to handle user session","stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Let’s assume you have a UserManager class","type":"text"},{"type":"text","text":" "},{"text":"that helps you to manage your active user","type":"text"}]}],"runtimePreview":null,"caption":[],"code":"native.user_manager_00.swift.sample","media":null,"type":"step"},{"caption":[{"inlineContent":[{"type":"text","text":"You may also pass "},{"type":"codeVoice","code":"null"},{"type":"text","text":" as userToken to start incognito session"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"Please take a look at "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK\/common_user_token","isActive":true},{"type":"text","text":" page to learn more about what is userToken"}],"type":"paragraph"}],"name":"Important","type":"aside","style":"important"}],"media":null,"content":[{"inlineContent":[{"type":"text","text":"As mandatory, you have to start Jivo session for user"}],"type":"paragraph"}],"code":"native.user_manager_01.swift.sample","runtimePreview":null,"type":"step"},{"content":[{"inlineContent":[{"text":"Optionally, you may specify some contact info","type":"text"}],"type":"paragraph"}],"code":"native.user_manager_02.swift.sample","type":"step","caption":[{"style":"note","name":"Note","content":[{"inlineContent":[{"text":"It will help you contact him easier in future","type":"text"}],"type":"paragraph"}],"type":"aside"}],"runtimePreview":null,"media":null}],"anchor":"How-to-handle-user-session","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Keep track of user activity, and perform following actions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"start session","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"update user info"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"stop session"}]}]}]}],"mediaPosition":"trailing"}]},{"anchor":"How-to-display-SDK","title":"How to display SDK","stepsSection":[{"media":null,"code":"native.profile_view_controller_00.swift.sample","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Let’s assume you have a HelpViewController class"},{"type":"text","text":" "},{"type":"text","text":"which is responsible for Help Center of your app"}],"type":"paragraph"}],"caption":[],"type":"step"},{"code":"native.profile_view_controller_01.swift.sample","runtimePreview":null,"type":"step","media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First step is to define the additional case"},{"type":"text","text":" "},{"type":"text","text":"for opening the support screen"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, import JivoSDK module and push JivoSDK into navigation stack"}]}],"media":null,"code":"native.profile_view_controller_02.swift.sample","runtimePreview":null,"caption":[],"type":"step"},{"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As an alternative, you may want to present JivoSDK modally over the screen"}]}],"caption":[],"code":"native.profile_view_controller_03.swift.sample","runtimePreview":null},{"caption":[],"code":"native.profile_view_01.swift.sample","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Also, here is a SwiftUI way"}]}],"type":"step","media":null}],"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Next thing is to display the JivoSDK UI onscreen: we support both UIKit and SwiftUI"}],"type":"paragraph"}]}]},{"title":"How to customize UI elements","stepsSection":[{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Please take a look at "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK\/JVDisplayElement","isActive":true},{"type":"text","text":" and call corresponding “define(…)” methods for those you need"}]}],"runtimePreview":null,"media":null,"caption":[],"code":"native.sdk_display_customization_00.swift.sample"}],"anchor":"How-to-customize-UI-elements","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"You are able to change some captions, colors, and icons"}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}]},{"stepsSection":[{"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"In most projects, this class just implements an entry point"}],"type":"paragraph"}],"code":"native.app_delegate_00.swift.sample","media":null,"runtimePreview":null},{"runtimePreview":null,"caption":[],"media":null,"code":"native.app_delegate_01.swift.sample","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First, you should implement some system methods related to Push Notifications"}]}]},{"media":null,"code":"native.app_delegate_02.swift.sample","type":"step","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Second, make the calls of corresponding JivoSDK methods"}],"type":"paragraph"}]}],"title":"How to handle Push Notifications","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s assume you have an AppDelegate class"},{"text":" ","type":"text"},{"text":"that manages your app lifecycle","type":"text"}]}],"kind":"contentAndMedia"}],"anchor":"How-to-handle-Push-Notifications"}]},{"kind":"callToAction","title":"Basic usage","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"featuredEyebrow":"Tutorial","action":{"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"overridingTitle":"Get started"}}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics","interfaceLanguage":"swift"},"hierarchy":{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table","modules":[{"projects":[{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics","sections":[{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-user-session"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-display-SDK","kind":"task"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-customize-UI-elements"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-Push-Notifications"}]}],"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Native-app"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/React-Native-app","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-user-session"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-display-SDK"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-Push-Notifications","kind":"task"}],"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics"}]},{"projects":[{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics","sections":[{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-user-session","kind":"task"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-display-SDK"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-Push-Notifications","kind":"task"}]}],"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Flutter-app"}],"paths":[["doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table","doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/$volume","doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Native-app"],["doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK"]]},"kind":"project","metadata":{"category":"Basic usage","title":"Basic usage","categoryPathComponent":"table","role":"project"},"references":{"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics":{"title":"Basic usage","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics","kind":"project","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"type":"topic","url":"\/tutorials\/jivosdk\/react_usage_basics","role":"project"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-handle-user-session":{"kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-user-session","title":"How to handle user session","type":"section","role":"pseudoSymbol","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-handle-user-session","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}]},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-handle-Push-Notifications":{"url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-handle-Push-Notifications","title":"How to handle Push Notifications","kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-Push-Notifications"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics#How-to-handle-user-session":{"title":"How to handle user session","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-user-session","kind":"section","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"type":"section","url":"\/tutorials\/jivosdk\/flutter_usage_basics#How-to-handle-user-session","role":"pseudoSymbol"},"native.profile_view_controller_03.swift.sample":{"fileType":"swift","content":["import Foundation","import UIKit","import JivoSDK","","fileprivate enum ProfileMenuItem: Int {","    case support","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .support:","            handleHelpMenuItemSupportTap()","        case .faq:","            handleHelpMenuItemFaqTap()","        case .website:","            handleHelpMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemSupportTap() {","        if let navigationController {","            Jivo.display.push(into: navigationController)","        }","        else {","            Jivo.display.present(over: self)","        }","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileName":"ProfileViewController.swift","type":"file","highlights":[{"line":17},{"line":19},{"line":21},{"line":31},{"line":32},{"line":33}],"syntax":"swift","identifier":"native.profile_view_controller_03.swift.sample"},"native.sdk_display_customization_00.swift.sample":{"identifier":"native.sdk_display_customization_00.swift.sample","content":["import JivoSDK","","Jivo.display.define(text: \"Friendly Support\", forElement: .headerTitle)","Jivo.display.define(color: .purple, forElement: .headerTitle)","Jivo.display.define(image: UIImage(), forElement: .headerIcon)"],"highlights":[],"fileName":"SdkDisplayCustomization.swift","syntax":"swift","fileType":"swift","type":"file"},"native.profile_view_controller_00.swift.sample":{"fileType":"swift","content":["import Foundation","import UIKit","","fileprivate enum ProfileMenuItem: Int {","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .faq:","            handleProfileMenuItemFaqTap()","        case .website:","            handleProfileMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileName":"ProfileViewController.swift","type":"file","highlights":[],"syntax":"swift","identifier":"native.profile_view_controller_00.swift.sample"},"native.app_delegate_00.swift.sample":{"identifier":"native.app_delegate_00.swift.sample","content":["import Foundation","import UIKit","","final class AppDelegate: UIResponder",", UIApplicationDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        return true","    }","}"],"highlights":[],"fileName":"AppDelegate.swift","syntax":"swift","fileType":"swift","type":"file"},"native.profile_view_01.swift.sample":{"highlights":[],"fileType":"swift","type":"file","content":["import Foundation","import SwiftUI","import JivoSDK","","struct ProfileView: some View {","    @State private var shouldPresentChat = false","    ","    var body: some View {","        Button(action: {shouldPresentChat.toggle()}) {","            Text(\"Tech Support\")","        }","        .fullScreenCover(isPresented: $shouldPresentChat) {","            Jivo.display.makeScreen(.modal)","        }","    }","}"],"syntax":"swift","fileName":"ProfileView.swift","identifier":"native.profile_view_01.swift.sample"},"native.app_delegate_02.swift.sample":{"identifier":"native.app_delegate_02.swift.sample","content":["import Foundation","import UIKit","import UserNotifications","import JivoSDK","","final class AppDelegate: UIResponder",", UIApplicationDelegate",", UNUserNotificationCenterDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        UNUserNotificationCenter.current().delegate = self","        ","        if Jivo.notifications.handleLaunch(options: launchOptions) {","            \/\/ Launched by JivoSDK notification","        }","        ","        return true","    }","    ","    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {","        Jivo.notifications.setPushToken(data: deviceToken)","    }","    ","    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {","        Jivo.notifications.setPushToken(error: error)","    }","    ","    func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable : Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) {","        if let result = Jivo.notifications.didReceiveRemoteNotification(userInfo: userInfo) {","            \/\/ Notification for JivoSDK, just pass this result into completionHandler","            completionHandler(result)","        }","        else {","            \/\/ Notification for your app, provide the result needed for your business logic","            completionHandler(.noData)","        }","    }","    ","    func userNotificationCenter(_ center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {","        if let options = Jivo.notifications.willPresent(notification: notification, preferableOptions: .banner) {","            \/\/ Notification for JivoSDK, just pass these options into completionHandler","            completionHandler(options)","        }","        else {","            \/\/ Notification for your app, provide the options needed for your business logic","            completionHandler([])","        }","    }","    ","    func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Void) {","        Jivo.notifications.didReceive(response: response)","        completionHandler()","    }","}"],"highlights":[{"line":4},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":20},{"line":24},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":50}],"fileName":"AppDelegate.swift","syntax":"swift","fileType":"swift","type":"file"},"doc://org.cocoapods.JivoSDK/tutorials/table/Native-app":{"title":"Native app","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Native-app","kind":"article","abstract":[],"type":"topic","url":"\/tutorials\/table\/native-app","role":"article"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics#How-to-handle-Push-Notifications":{"title":"How to handle Push Notifications","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-Push-Notifications","kind":"section","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"type":"section","url":"\/tutorials\/jivosdk\/react_usage_basics#How-to-handle-Push-Notifications","role":"pseudoSymbol"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-display-SDK":{"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-display-SDK","type":"section","title":"How to display SDK","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-display-SDK","role":"pseudoSymbol","kind":"section","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}]},"native.user_manager_01.swift.sample":{"fileType":"swift","content":["import Foundation","import JivoSDK","","struct User {","    let email: String","    let supportJwt: String","    let fullName: String?","    let phoneNumber: String?","}","","final class UserManager {","    private(set) var user: User?","    ","    func update(user: User) {","        self.user = user","        configureJivoSession()","    }","    ","    private func configureJivoSession() {","        if let user {","            let client = Jivo.session.setup(widgetID: \"YOUR_CHANNEL_ID\", clientIdentity: .jwt(user.supportJwt))","        }","        else {","            Jivo.session.shutDown()","        }","    }","}"],"fileName":"UserManager.swift","type":"file","highlights":[{"line":2},{"line":16},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26}],"syntax":"swift","identifier":"native.user_manager_01.swift.sample"},"doc://org.cocoapods.JivoSDK/tutorials/table/Flutter-app":{"kind":"article","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Flutter-app","title":"Flutter app","type":"topic","role":"article","url":"\/tutorials\/table\/flutter-app","abstract":[]},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics#How-to-display-SDK":{"kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-display-SDK","title":"How to display SDK","type":"section","role":"pseudoSymbol","url":"\/tutorials\/jivosdk\/react_usage_basics#How-to-display-SDK","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}]},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics#How-to-display-SDK":{"title":"How to display SDK","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-display-SDK","kind":"section","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"type":"section","url":"\/tutorials\/jivosdk\/flutter_usage_basics#How-to-display-SDK","role":"pseudoSymbol"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics":{"kind":"project","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics","title":"Basic usage","type":"topic","role":"project","url":"\/tutorials\/jivosdk\/native_usage_basics","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}]},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics#How-to-handle-user-session":{"role":"pseudoSymbol","title":"How to handle user session","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-user-session","url":"\/tutorials\/jivosdk\/react_usage_basics#How-to-handle-user-session","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"kind":"section","type":"section"},"doc://org.cocoapods.JivoSDK/tutorials/table":{"title":"JivoSDK Samples","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table","kind":"overview","abstract":[],"type":"topic","url":"\/tutorials\/table","role":"overview"},"doc://org.cocoapods.JivoSDK/tutorials/table/React-Native-app":{"title":"React Native app","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/React-Native-app","kind":"article","abstract":[],"type":"topic","url":"\/tutorials\/table\/react-native-app","role":"article"},"native.profile_view_controller_02.swift.sample":{"identifier":"native.profile_view_controller_02.swift.sample","content":["import Foundation","import UIKit","import JivoSDK","","fileprivate enum ProfileMenuItem: Int {","    case support","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .support:","            handleProfileMenuItemSupportTap()","        case .faq:","            handleProfileMenuItemFaqTap()","        case .website:","            handleProfileMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemSupportTap() {","        if let navigationController {","            Jivo.display.push(into: navigationController)","        }","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"highlights":[{"line":3},{"line":28},{"line":29},{"line":30}],"fileName":"ProfileViewController.swift","syntax":"swift","fileType":"swift","type":"file"},"native.profile_view_controller_01.swift.sample":{"fileName":"ProfileViewController.swift","type":"file","syntax":"swift","fileType":"swift","highlights":[{"line":5},{"line":15},{"line":16},{"line":26},{"line":27},{"line":28}],"identifier":"native.profile_view_controller_01.swift.sample","content":["import Foundation","import UIKit","","fileprivate enum ProfileMenuItem: Int {","    case support","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .support:","            handleProfileMenuItemSupportTap()","        case .faq:","            handleProfileMenuItemFaqTap()","        case .website:","            handleProfileMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemSupportTap() {","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"]},"native.user_manager_02.swift.sample":{"fileName":"UserManager.swift","highlights":[{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":28}],"content":["import Foundation","import JivoSDK","","struct User {","    let email: String","    let supportJwt: String","    let fullName: String?","    let phoneNumber: String?","}","","final class UserManager {","    private(set) var user: User?","    ","    func update(user: User) {","        self.user = user","        configureJivoSession()","    }","    ","    private func configureJivoSession() {","        if let user {","            let info = JVClientContactInfo(","                name: user.fullName,","                email: user.email,","                phone: user.phoneNumber","            )","            ","            let client = Jivo.session.setup(widgetID: \"YOUR_CHANNEL_ID\", clientIdentity: .jwt(user.supportJwt))","            client.setContactInfo(info)","        }","        else {","            Jivo.session.shutDown()","        }","    }","}"],"syntax":"swift","type":"file","fileType":"swift","identifier":"native.user_manager_02.swift.sample"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics":{"kind":"project","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"role":"project","type":"topic","url":"\/tutorials\/jivosdk\/flutter_usage_basics","title":"Basic usage"},"native.user_manager_00.swift.sample":{"type":"file","fileName":"UserManager.swift","fileType":"swift","syntax":"swift","highlights":[],"identifier":"native.user_manager_00.swift.sample","content":["import Foundation","","struct User {","    let email: String","    let supportJwt: String","    let fullName: String?","    let phoneNumber: String?","}","","final class UserManager {","    private(set) var user: User?","    ","    func update(user: User) {","        self.user = user","    }","}"]},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics#How-to-handle-Push-Notifications":{"kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-Push-Notifications","title":"How to handle Push Notifications","type":"section","role":"pseudoSymbol","url":"\/tutorials\/jivosdk\/flutter_usage_basics#How-to-handle-Push-Notifications","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}]},"native.app_delegate_01.swift.sample":{"type":"file","fileType":"swift","content":["import Foundation","import UIKit","import UserNotifications","","final class AppDelegate: UIResponder",", UIApplicationDelegate",", UNUserNotificationCenterDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        UNUserNotificationCenter.current().delegate = self","        return true","    }","    ","    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {","    }","    ","    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {","    }","    ","    func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable : Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) {","        completionHandler(.noData)","    }","    ","    func userNotificationCenter(_ center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {","        completionHandler([])","    }","    ","    func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Void) {","        completionHandler()","    }","}"],"highlights":[{"line":3},{"line":6},{"line":7},{"line":9},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}],"fileName":"AppDelegate.swift","identifier":"native.app_delegate_01.swift.sample","syntax":"swift"},"doc://org.cocoapods.JivoSDK/documentation/JivoSDK/JVDisplayElement":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"JVDisplayElement","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"JVDisplayElement"}],"role":"symbol","abstract":[{"type":"text","text":"UI elements available for customization"}],"url":"\/documentation\/jivosdk\/jvdisplayelement","identifier":"doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK\/JVDisplayElement","title":"JVDisplayElement","type":"topic","kind":"symbol"},"doc://org.cocoapods.JivoSDK/documentation/JivoSDK/common_user_token":{"type":"topic","title":"User Token and JWT","kind":"article","role":"article","url":"\/documentation\/jivosdk\/common_user_token","abstract":[{"text":"Required for keeping chat history alive","type":"text"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK\/common_user_token"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-customize-UI-elements":{"role":"pseudoSymbol","title":"How to customize UI elements","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-customize-UI-elements","kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-customize-UI-elements","type":"section"}},"variantOverrides":[{"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}